1669. Merge In Between Linked Lists
You are given two linked lists: list1 and list2 of sizes n and m respectively.
Remove list1's nodes from the ath node to the bth node, and put list2 in their place.
Build the result list and return its head.

Example:
Input: list1 = [0,1,2,3,4,5,6], a = 2, b = 5, list2 = [1000000,1000001,1000002,1000003,1000004]
Output: [0,1,1000000,1000001,1000002,1000003,1000004,6]
Explanation: The blue edges and nodes in the above figure indicate the result.

Solution:-
class Solution {
public:
    ListNode* mergeInBetween(ListNode* list1, int a, int b, ListNode* list2) {
        ListNode* current = list1;
        for (int i = 1; i < a; i++) current = current->next;
        ListNode* ath_node = current;
        for (int i = a; i <= b + 1; i++) current = current->next;
        ListNode* bth_next_node = current;

        // Connect the ath node to the head of list2
        ath_node->next = list2;

        // Find the tail of list2
        current = list2;
        while (current->next != NULL) current = current->next;
        ListNode* tail_list2 = current;

        // Connect the tail of list2 to the bth_next_node
        tail_list2->next = bth_next_node;

        return list1;
    }
};
